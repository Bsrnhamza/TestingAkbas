@model IEnumerable<TestingAkbas.Models.Fabric>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<table class="table table-hover">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.QualityClass)</th>
            <th>@Html.DisplayNameFor(model => model.FabricCode)</th>
            <th>@Html.DisplayNameFor(model => model.Qualities)</th>
            <th>@Html.DisplayNameFor(model => model.QualityName)</th>
            <th>@Html.DisplayNameFor(model => model.QualityGroup)</th>
            <th>@Html.DisplayNameFor(model => model.QualityComposition)</th>
            <th>@Html.DisplayNameFor(model => model.PatternType)</th>
            <th>@Html.DisplayNameFor(model => model.Width)</th>
            <th>@Html.DisplayNameFor(model => model.Weight)</th>
            <th>@Html.DisplayNameFor(model => model.RawFabricPrice)</th>
            <th>@Html.DisplayNameFor(model => model.DomesticPrice)</th>
            <th>@Html.DisplayNameFor(model => model.ExportPrice)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="@GetQualityClassCssClass(item.QualityClass)">
                    @Html.DisplayFor(modelItem => item.QualityClass)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.FabricCode)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.Qualities)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.QualityName)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.QualityGroup)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.QualityComposition)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.PatternType)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.Width)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.RawFabricPrice)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.DomesticPrice)
                </td>
                <td class="@GetQualitiesCssClass(item.Qualities)">
                    @Html.DisplayFor(modelItem => item.ExportPrice)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <form asp-action="Edit" asp-route-id="@item.Id">
                            <button type="submit" class="btn btn-warning">Edit</button>
                        </form>
                        <form asp-action="Details" asp-route-id="@item.Id">
                            <button type="submit" class="btn btn-info">Details</button>
                        </form>
                        <form asp-action="Delete" asp-route-id="@item.Id" onsubmit="return confirm('Are you sure you want to delete this item?');">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Styles {
    <style>
        /* QualityClass renkleri */
        .quality-class-viscose {
            background-color: rgba(255, 165, 0, 0.5); /* orange */
        }

        .quality-class-rayon {
            background-color: rgba(0, 128, 0, 0.5); /* green */
        }

        .quality-class-cotton {
            background-color: rgba(128, 0, 128, 0.5); /* purple */
        }

        .quality-class-nylon {
            background-color: rgba(255, 255, 0, 0.5); /* yellow */
        }

        .quality-class-polyester {
            background-color: rgba(255, 0, 0, 0.5); /* red */
        }

        .quality-class-tencel {
            background-color: rgba(0, 0, 255, 0.5); /* blue */
        }

        .quality-class-linen {
            background-color: rgba(173, 216, 230, 0.5); /* lightblue */
        }

        .quality-class-jacquard {
            background-color: rgba(128, 128, 128, 0.5); /* gray */
        }

        .quality-class-mix {
            background-color: rgba(211, 211, 211, 0.5); /* lightgray */
        }

        /* Qualities renkleri */
        .qualities-m {
            background-color: rgba(144, 238, 144, 0.25); /* lightgreen */
        }

        .qualities-a {
            background-color: rgba(173, 216, 230, 0.25); /* lightblue */
        }

        .qualities-n {
            background-color: rgba(255, 255, 224, 0.25); /* lightyellow */
        }
    </style>
}


@functions {
    public string GetQualityClassCssClass(string qualityClass)
    {
        switch (qualityClass?.ToLower())
        {
            case "viscose":
                return "quality-class-viscose";
            case "rayon":
            case "rynsignart":
                return "quality-class-rayon";
            case "cotton":
                return "quality-class-cotton";
            case "nylon":
                return "quality-class-nylon";
            case "polyester":
            case "pesdouble":
                return "quality-class-polyester";
            case "tencel":
            case "modal":
                return "quality-class-tencel";
            case "linen":
                return "quality-class-linen";
            case "jacquard":
                return "quality-class-jacquard";
            case "mix":
            case "yarndyed":
                return "quality-class-mix";
            default:
                return "";
        }
    }

    public string GetQualitiesCssClass(string qualities)
    {
        switch (qualities?.ToLower())
        {
            case "m":
                return "qualities-m";
            case "a":
                return "qualities-a";
            case "n":
                return "qualities-n";
            default:
                return "";
        }
    }
}
